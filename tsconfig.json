{
  "compilerOptions": {
    "outDir": "./dist/",
    // Подсвечивает все места где не указан тип
    // Однако это не означает, что теперь вовсе нельзя использовать any.
    // Это означает лишь, что в подобных ситуация разработчик должен явно писать any,
    "noImplicitAny": true,
    "module": "es2020", //es2020
    // В какую спецификацию компилируем: для поддержки большинства браузеров
    "target": "es5",
    "jsx": "react-jsx",
    "allowJs": true,
    "strict": true,
    "moduleResolution": "node",
    // Для абсолютного импорта
    "baseUrl": ".",
    "paths": {
      "*":["./src/*"]
    },
    // esModuleInterop позволяет работать с пакетами, которые используют
    // common js как с обычными пакета с помощью import (require() module.export) = common js
    // import Moment from 'moment';
    // без флага esModuleInterop результат undefined
    // console.log(Moment);
    // c флагом результат [object Object]
    // console.log(Moment);
    "esModuleInterop": true, //возможность использовать import вместо require
    // Если какая-либо библиотека не имеет default import,
    // лоадеры вроде ts-loader или babel-loader автоматически создают их
    // вместо такого импорта
    // import * as React from 'react';
    // можно писать такой
    // import React from 'react';
    "allowSyntheticDefaultImports": true, //убрать * as в импорте
  },
  "ts-node": {
    "compilerOptions": {
      "module": "CommonJS"
    },

    // "esm": true,
    // "experimentalSpecifierResolution": "node",
  },
  // "typescript": { "reactDocgen": false },
  "include": [
    "./config/jest/setupTest.ts",
    "./src/**/*.ts",
    "./src/**/*.tsx",
    "./.eslintrc.js",
  ],

  "rootDirs": ["src", "stories"],
  "exclude": ["node_modules", "build", "scripts"]
}